/* Задание 1. Подсчёт чётных и нечётных чисел в массиве
Что нужно сделать
Заполните массив неупорядоченными числами на основе генератора случайных чисел.
Введите число. Программа должна найти это число в массиве и вывести, сколько чисел
 находится в массиве после введённого. При отсутствии введённого числа в массиве — вывести 0.
 Для удобства проверки реализуйте вывод массива на экран. */

package main

import (
	"fmt"
	"math/rand"
	"time"
)

const n = 10 // количество членов массива

func generateArray() [n]int { //генерируем массив, возвращаем его целиком
	rand.Seed(time.Now().UnixNano())
	var a [n]int
	for i := 0; i < n; i++ {
		a[i] = rand.Intn(3 * n) //числа в массиве в диапазоне n*3
	}
	return a
}

func findNum(a [n]int, value int) (index int) { // получаем на вход массив, на выход переменная индекс
	index = 0
	for i := 0; i < n; i++ {
		if a[i] == value {
			index = n - i - 1 // отнимаем от общего количества членов массива индекс, попавший в условие и минус 1 т.к. i начинается с нуля
			break
		}
	}
	return
}

func main() {
	gA := generateArray() // переменная для использования функции генератора массива в main
	fmt.Println("Введите число")
	var value int
	fmt.Scan(&value)
	fmt.Println(gA)
	fmt.Println("После введенного числа еще ", findNum(gA, value), " чисел")
}
